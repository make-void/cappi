// Generated by CoffeeScript 1.10.0
import axios from 'axios';
var BCyp, c;

c = console;

BCyp = (function() {
  var HOST, ROOT;

  HOST = "https://api.blockcypher.com";

  ROOT = HOST + "/v1/btc/main";

  function BCyp(address1) {
    this.address = address1;
  }

  BCyp.prototype.url_balance = function(address) {
    return ROOT + "/addrs/" + address + "/balance";
  };

  BCyp.prototype.balance = function() {
    return new Promise((function(_this) {
      return function(resolve, reject) {
        var url;
        url = _this.url_balance(_this.address);
        return axios.get(url).then(function(resp) {
          return resolve(resp.data);
        })["catch"](function(err) {
          return c.error(err);
        });
      };
    })(this));
  };

  BCyp.prototype.utxos = function() {
    var address, unspentUrl, utxos;
    address = this.address;
    unspentUrl = "http://api.blockcypher.com/v1/btc/main/addrs/" + address + "/full";
    utxos = [];
    return new Promise(function(resolve, reject) {
      return axios.get(unspentUrl).then(function(res) {
        var txs;
        txs = res.data.txs;
        txs.forEach(function(tx) {
          var outputs;
          outputs = tx.outputs;
          return outputs.forEach(function(output, idx) {
            var outputAddress;
            outputAddress = output.addresses[0];
            if (!output.spent_by && outputAddress === address) {
              return utxos.push({
                tx_hash: tx.hash,
                output_n: idx,
                script: output.script,
                value: output.value
              });
            }
          });
        });
        c.log('Unspent transaction outputs:', utxos);
        return resolve(utxos);
      })["catch"](function(err) {
        c.error('Houston, we have a problem:', err);
        return reject(err);
      });
    });
  };

  return BCyp;

})();

export default BCyp;
